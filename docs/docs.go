// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Все данные библиотеки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API для музыкальной библиотеки"
                ],
                "summary": "Все данные библиотеки",
                "operationId": "get-all-songs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Кол-во записей",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение по записям",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Фильтрация",
                        "name": "input",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/domain.SongDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Без некоторых данных",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Songs": {
                                            "$ref": "#/definitions/models.Song"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/add": {
            "post": {
                "description": "Запрос на добавление новой песни",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API для музыкальной библиотеки"
                ],
                "summary": "Запрос на добавление новой песни",
                "operationId": "add-new-song",
                "parameters": [
                    {
                        "description": "Данные по песне",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SongDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ИД",
                        "schema": {
                            "$ref": "#/definitions/domain.Song"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/delete": {
            "delete": {
                "description": "Запрос на удаление песни",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API для музыкальной библиотеки"
                ],
                "summary": "Запрос на удаление песни",
                "operationId": "delete-song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ИД",
                        "name": "songID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Без некоторых данных",
                        "schema": {
                            "$ref": "#/definitions/domain.Song"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "description": "Получить данные по песне",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API для музыкальной библиотеки"
                ],
                "summary": "Получить данные по песне",
                "operationId": "get-song-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер куплета от 1. Пусто - все куплеты",
                        "name": "verse",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Название группы",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Название песни",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные",
                        "schema": {
                            "$ref": "#/definitions/domain.SongDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update": {
            "put": {
                "description": "Обновить данные песни",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API для музыкальной библиотеки"
                ],
                "summary": "Обновить данные песни",
                "operationId": "update-song-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ИД песни",
                        "name": "songID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные",
                        "schema": {
                            "$ref": "#/definitions/domain.SongDetail"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "songID": {
                    "type": "integer"
                }
            }
        },
        "domain.SongDetail": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "songID": {
                    "type": "integer"
                },
                "sourceText": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.SongDetailText"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "domain.SongDetailText": {
            "type": "object",
            "properties": {
                "chorus": {
                    "type": "string"
                },
                "verse": {
                    "type": "string"
                }
            }
        },
        "handler.response": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Song"
                    }
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Music Info",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
